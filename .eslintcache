[{"E:\\react\\tutorial\\src\\index.js":"1","E:\\react\\tutorial\\src\\App.js":"2","E:\\react\\tutorial\\src\\reportWebVitals.js":"3","E:\\react\\tutorial\\src\\components\\index.js":"4","E:\\react\\tutorial\\src\\Constant.js":"5","E:\\react\\tutorial\\src\\Axios.js":"6","E:\\react\\tutorial\\src\\components\\Auth\\index.js":"7","E:\\react\\tutorial\\src\\components\\Auth\\Login.js":"8","E:\\react\\tutorial\\src\\components\\Auth\\authService.js":"9","E:\\react\\tutorial\\src\\components\\TopNav.js":"10","E:\\react\\tutorial\\src\\components\\Product.js":"11","E:\\react\\tutorial\\src\\components\\ProtectedRoute.js":"12","E:\\react\\tutorial\\src\\components\\Material.js":"13","E:\\react\\tutorial\\src\\components\\NumberFormatCustom.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":866,"mtime":1611217514220,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":198,"mtime":1611215781560,"results":"19","hashOfConfig":"16"},{"size":252,"mtime":1611208770778,"results":"20","hashOfConfig":"16"},{"size":2495,"mtime":1609977174979,"results":"21","hashOfConfig":"16"},{"size":58,"mtime":1611215969694,"results":"22","hashOfConfig":"16"},{"size":2875,"mtime":1611276266281,"results":"23","hashOfConfig":"16"},{"size":1131,"mtime":1611118307613,"results":"24","hashOfConfig":"16"},{"size":1678,"mtime":1611276266351,"results":"25","hashOfConfig":"16"},{"size":11360,"mtime":1611276266281,"results":"26","hashOfConfig":"16"},{"size":667,"mtime":1611124430553,"results":"27","hashOfConfig":"16"},{"size":9426,"mtime":1611276266281,"results":"28","hashOfConfig":"16"},{"size":754,"mtime":1611208747916,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1b4qraa",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\react\\tutorial\\src\\index.js",[],["60","61"],"E:\\react\\tutorial\\src\\App.js",[],"E:\\react\\tutorial\\src\\reportWebVitals.js",[],"E:\\react\\tutorial\\src\\components\\index.js",[],"E:\\react\\tutorial\\src\\Constant.js",[],"E:\\react\\tutorial\\src\\Axios.js",[],"E:\\react\\tutorial\\src\\components\\Auth\\index.js",[],"E:\\react\\tutorial\\src\\components\\Auth\\Login.js",[],"E:\\react\\tutorial\\src\\components\\Auth\\authService.js",[],"E:\\react\\tutorial\\src\\components\\TopNav.js",[],"E:\\react\\tutorial\\src\\components\\Product.js",["62","63","64","65","66"],"import React, { Component, useState } from 'react';\r\n\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport NumberFormatCustom from \"./NumberFormatCustom\";\r\nimport { config } from '../Constant';\r\nimport axiosInstance from \"../Axios\";\r\nimport { Trash, Pen } from \"react-bootstrap-icons\"\r\n\r\nconst initForm = {\r\n  quantity: \"\",\r\n  total_cost: \"\",\r\n  customer_name: \"\",\r\n  product: \"1\", // rice material id = 1\r\n  completed: true,\r\n  note: \"\"\r\n};\r\n\r\nfunction ListItems(props) {\r\n  let { orders, onDelete, onUpdate } = props;\r\n  if (!orders) return (\r\n    <tbody></tbody>\r\n  )\r\n  let listorders = orders.map((item, index) => {\r\n    return (\r\n      <tr key={item.id}>\r\n        <td className=\"text-center\"><Moment format=\"DD-M-YY\">{item.date_created}</Moment></td>\r\n        <td className=\"text-center\"><NumberFormat value={item.total_cost} displayType={'text'} thousandSeparator={true} decimalSeparator=\".\" suffix=\" đ\" /></td>\r\n        <td className=\"text-center\">{item.customer_name}</td>\r\n        <td className=\"text-center custom-hidden\">{item.product == \"1\" ? \"20 lít\" : \"10 lít\"}</td>\r\n        <td className=\"text-center custom-hidden\">{item.completed ? \"..\" : \"nợ\"}</td>\r\n        <td className=\"text-center custom-hidden\">{item.quantity}</td>\r\n        <td className=\"text-center custom-hidden\">{item.note ? item.note : \"..\"}</td>\r\n        <td className=\"text-center\">\r\n          <span className=\"cursor-pointer mx-3\" onClick={() => onUpdate(item)}>\r\n            <Pen className=\"\"></Pen>\r\n          </span>\r\n          <span className=\"cursor-pointer\" onClick={() => onDelete(item.id)}>\r\n            <Trash></Trash>\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <tbody>\r\n      {listorders}\r\n    </tbody>\r\n  )\r\n}\r\n\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0,\r\n      next: `${config.API_URL}/order/`,\r\n      previou: null,\r\n      filter: {\r\n        limmit: \"\",\r\n        search: \"\"\r\n      },\r\n      orders: [],\r\n      order_form: {\r\n        form_value: { ...initForm },\r\n        update_mode: false,\r\n        sending: false,\r\n      },\r\n      loading: true,\r\n      id: \"\"\r\n    }\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n    this.cancelUpdate = this.cancelUpdate.bind(this);\r\n  }\r\n\r\n  getList() {\r\n    this.setState({ loading: true });\r\n    let url = `${config.API_URL}/order/?search=${this.state.filter.search}`;\r\n\r\n    axiosInstance.get(url).then(res => {\r\n      this.setState({\r\n        count: res.data.count,\r\n        orders: res.data.results,\r\n        next: res.data.next,\r\n        previou: res.data.previou,\r\n        orders: res.data.results,\r\n        loading: false,\r\n      })\r\n    })\r\n  }\r\n\r\n  onDelete(id) {\r\n    if (window.confirm('Are you sure you wish to delete this item?')) {\r\n      console.log(\"delete,\", id)\r\n\r\n      const url = `${config.API_URL}/order/${id}`;\r\n      axiosInstance.delete(url).then(data => {\r\n        console.log(this);\r\n        this.getList();\r\n      });\r\n    }\r\n  }\r\n\r\n  onUpdate(receipt) {\r\n    this.setState((prevState) => {\r\n      let order_form = { ...prevState };\r\n      order_form.form_value = { ...receipt };\r\n      order_form.update_mode = true;\r\n      return { order_form: order_form };\r\n    });\r\n  }\r\n\r\n  cancelUpdate() {\r\n    this.setState({\r\n      order_form: {\r\n        update_mode: false,\r\n        form_value: { ...initForm }\r\n      }\r\n    })\r\n  }\r\n\r\n  handleFilter(event) {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState((prevState) => {\r\n      let filter = { ...prevState.filter };\r\n      filter[name] = value ? value : \"\";\r\n      return { filter };\r\n    }, () => {\r\n      this.getList();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    // const { name, value } = event.target;\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    // update form data to state\r\n    this.setState((prevState) => {\r\n      let order_form = { ...prevState.order_form };\r\n      let form_value = order_form.form_value;\r\n      form_value[name] = value;\r\n      if (form_value[\"product\"] == \"1\" && name !== \"total_cost\") form_value[\"total_cost\"] = form_value[\"quantity\"] * 500000;\r\n      if (form_value[\"product\"] == \"2\" && name !== \"total_cost\") form_value[\"total_cost\"] = form_value[\"quantity\"] * 250000;      \r\n      return { order_form: order_form };\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({ order_form: { ...this.state.order_form, sending: true } });\r\n\r\n    const url = `${config.API_URL}/order/`;\r\n    let value = JSON.stringify(this.state.order_form.form_value);\r\n\r\n\r\n    if (this.state.order_form.update_mode) {\r\n      // Update item\r\n      axiosInstance.put(`${config.API_URL}/order/${this.state.order_form.form_value.id}/`, value).then(data => {\r\n        this.getList();\r\n\r\n        this.setState({\r\n          order_form: {\r\n            update_mode: false,\r\n            sending: false,\r\n            form_value: { ...initForm }\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      // Create item\r\n      axiosInstance.post(url, value).then(data => {\r\n\r\n        this.setState({\r\n          order_form: {\r\n            update_mode: false,\r\n            sending: false,\r\n            form_value: { ...initForm }\r\n          }\r\n        });\r\n\r\n        this.getList();\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-md-4\">\r\n          <legend>Xuất</legend>\r\n          <hr />\r\n          <form onSubmit={this.handleSubmit}>\r\n            {/* Loai ruou */}\r\n            <div className=\"form-group mb-3\">\r\n              <select className=\"form-control\" name=\"product\" value={this.state.order_form.form_value.product} onChange={this.handleChange} >\r\n                <option value=\"1\">Can 20 lit</option>\r\n                <option value=\"2\">Can 10 lit</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Customer */}\r\n            <div className=\"mb-3\">\r\n              <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Khách hàng\" name=\"customer_name\" value={this.state.order_form.form_value.customer_name} onChange={this.handleChange} required />\r\n            </div>\r\n\r\n            {/* Số can */}\r\n            <div className=\"mb-3\">\r\n              <input type=\"number\" className=\"form-control mb-3\" placeholder=\"Số can\" name=\"quantity\" value={this.state.order_form.form_value.quantity} onChange={this.handleChange} required />\r\n            </div>\r\n\r\n            {/* Giá */}\r\n            <div className=\"mb-3\">\r\n              <NumberFormatCustom className=\"form-control mb-3\" placeholder=\"Giá\" name=\"total_cost\" value={this.state.order_form.form_value.total_cost} onChange={this.handleChange} thousandSeparator={true} suffix={' đ'} required />\r\n            </div>\r\n\r\n            {/* Ghi chú */}\r\n            <div className=\"mb-3\">\r\n              <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Ghi chú\" name=\"note\" value={this.state.order_form.form_value.note} onChange={this.handleChange} />\r\n            </div>\r\n\r\n            {/* Đã trả */}\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"completed\">Đã thanh toán: </label>\r\n              <input id=\"completed\" name=\"completed\" type=\"checkbox\" className=\"mx-2\" checked={this.state.order_form.form_value.completed} onChange={this.handleChange} />\r\n            </div>\r\n\r\n            {/* Submit btn */}\r\n            <div className=\"mb-3 d-flex\">\r\n              {this.state.order_form.update_mode &&\r\n                <div>\r\n                  {/* For edit item: cancel button and id of item */}\r\n                  <input type=\"number\" name=\"id\" defaultValue={this.state.order_form.form_value.id} hidden />\r\n                  <span className={(this.state.order_form.sending ? \"invisible\" : \"visible\") + \" btn btn-primary me-3 px-5\"} onClick={this.cancelUpdate} >Hủy</span>\r\n                </div>\r\n              }\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={this.state.order_form.form_value.quantity === \"\" || this.state.order_form.form_value.total_cost === \"\"}>\r\n                {!this.state.order_form.sending &&\r\n                  <span >{this.state.order_form.update_mode ? \"Lưu thay đổi\" : \"Xuất\"}</span>\r\n                }\r\n                {this.state.order_form.sending && <div className=\"ms-3 spinner-border spinner-border-sm\" role=\"status\">\r\n                  <span className=\"sr-only\"></span>\r\n                </div>}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-8\">\r\n          <div className=\"row navbar filter\">\r\n\r\n            {/* limmit */}\r\n            {/* <div className=\"col-2 mb-3\">\r\n              <label htmlFor=\"limmit\">limmit:</label>\r\n              <select className=\"form-select\" name=\"limmit\" value={this.state.filter.limmit} onChange={this.handleFilter} >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n              </select>\r\n            </div> */}\r\n\r\n            {/* Text search */}\r\n            <div className=\"col-6 mr-0\">\r\n              <label htmlFor=\"search\">Tìm kiếm:</label>\r\n              <input type=\"text\" className=\"form-control mb-3\" placeholder=\"Tìm kiếm\" name=\"search\" value={this.state.filter.search} onChange={this.handleFilter} />\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"table-responsive-md\">\r\n            <table className=\"table table-striped align-middle table-hover table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  {/* <th scope=\"col\">#</th> */}\r\n                  <th scope=\"col\" className=\"text-center\">Ngày</th>\r\n                  <th scope=\"col\" className=\"text-center \">Tổng tiền</th>\r\n                  <th scope=\"col\" className=\"text-center\">Khách hàng</th>\r\n                  <th scope=\"col\" className=\"text-center custom-hidden\">Loại</th>\r\n                  <th scope=\"col\" className=\"text-center custom-hidden\">...</th>\r\n                  <th scope=\"col\" className=\"text-center custom-hidden\">Số can</th>\r\n                  <th scope=\"col\" className=\"text-center custom-hidden\">Ghi chú</th>\r\n                  <th scope=\"col\" className=\"text-center\">Tùy chọn</th>\r\n                </tr>\r\n              </thead>\r\n              {!this.state.loading && \r\n              <ListItems orders={this.state.orders} onUpdate={this.onUpdate} onDelete={this.onDelete}></ListItems>\r\n              }\r\n            </table>\r\n            {this.state.loading &&\r\n\r\n              <div className=\"ms-3 spinner-border spinner-border-sm\" role=\"status\">\r\n                <span className=\"sr-only\"></span>\r\n              </div>\r\n\r\n            }\r\n            {this.state.orders.length === 0 && !this.state.loading && <div>\r\n              <p>Emty data</p>\r\n            </div>\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","E:\\react\\tutorial\\src\\components\\ProtectedRoute.js",[],"E:\\react\\tutorial\\src\\components\\Material.js",["67","68"],"E:\\react\\tutorial\\src\\components\\NumberFormatCustom.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":30,"column":65,"nodeType":"79","messageId":"80","endLine":30,"endColumn":67},{"ruleId":"81","severity":1,"message":"82","line":93,"column":9,"nodeType":"83","messageId":"80","endLine":93,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":154,"column":33,"nodeType":"79","messageId":"80","endLine":154,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":155,"column":33,"nodeType":"79","messageId":"80","endLine":155,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":130,"column":34,"nodeType":"79","messageId":"80","endLine":130,"endColumn":36},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'orders'.","ObjectExpression","no-global-assign","no-unsafe-negation"]