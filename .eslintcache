[{"E:\\react\\tutorial\\src\\index.js":"1","E:\\react\\tutorial\\src\\App.js":"2","E:\\react\\tutorial\\src\\reportWebVitals.js":"3","E:\\react\\tutorial\\src\\components\\index.js":"4","E:\\react\\tutorial\\src\\Constant.js":"5","E:\\react\\tutorial\\src\\Axios.js":"6","E:\\react\\tutorial\\src\\components\\Auth\\index.js":"7","E:\\react\\tutorial\\src\\components\\Auth\\Login.js":"8","E:\\react\\tutorial\\src\\components\\Auth\\authService.js":"9","E:\\react\\tutorial\\src\\components\\TopNav.js":"10","E:\\react\\tutorial\\src\\components\\Product.js":"11","E:\\react\\tutorial\\src\\components\\ProtectedRoute.js":"12","E:\\react\\tutorial\\src\\components\\Material.js":"13","E:\\react\\tutorial\\src\\components\\NumberFormatCustom.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":866,"mtime":1611217514220,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":198,"mtime":1611215781560,"results":"19","hashOfConfig":"16"},{"size":252,"mtime":1611208770778,"results":"20","hashOfConfig":"16"},{"size":2495,"mtime":1609977174979,"results":"21","hashOfConfig":"16"},{"size":58,"mtime":1611215969694,"results":"22","hashOfConfig":"16"},{"size":2827,"mtime":1611231440815,"results":"23","hashOfConfig":"16"},{"size":1131,"mtime":1611118307613,"results":"24","hashOfConfig":"16"},{"size":1670,"mtime":1611215677273,"results":"25","hashOfConfig":"16"},{"size":11370,"mtime":1611248919221,"results":"26","hashOfConfig":"16"},{"size":667,"mtime":1611124430553,"results":"27","hashOfConfig":"16"},{"size":7780,"mtime":1611128810980,"results":"28","hashOfConfig":"16"},{"size":754,"mtime":1611208747916,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1b4qraa",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\react\\tutorial\\src\\index.js",[],["60","61"],"E:\\react\\tutorial\\src\\App.js",[],"E:\\react\\tutorial\\src\\reportWebVitals.js",[],"E:\\react\\tutorial\\src\\components\\index.js",[],"E:\\react\\tutorial\\src\\Constant.js",[],"E:\\react\\tutorial\\src\\Axios.js",[],"E:\\react\\tutorial\\src\\components\\Auth\\index.js",[],"E:\\react\\tutorial\\src\\components\\Auth\\Login.js",[],"E:\\react\\tutorial\\src\\components\\Auth\\authService.js",[],"E:\\react\\tutorial\\src\\components\\TopNav.js",[],"E:\\react\\tutorial\\src\\components\\Product.js",["62","63","64","65","66"],"E:\\react\\tutorial\\src\\components\\ProtectedRoute.js",[],"E:\\react\\tutorial\\src\\components\\Material.js",["67","68"],"import React, { useState, Component } from 'react';\r\nimport { config } from '../Constant';\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport axiosInstance from \"../Axios\";\r\n\r\nimport { Trash, Pen } from \"react-bootstrap-icons\"\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            // cái target này sẽ được chuyền qua onChange\r\n            // nên nó cần có cả name và value để setState đọc\r\n            name: \"total_cost\",\r\n            value: values.value\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      suffix=\" đ\"\r\n    />\r\n  );\r\n}\r\n\r\nconst initForm = {\r\n  quantity: \"\",\r\n  total_cost: \"\",\r\n  material: \"1\" // rice material id = 1\r\n};\r\n\r\n\r\nfunction ListItems(props) {\r\n  let { receipts, onDelete, onUpdate } = props;\r\n\r\n  if (!receipts) return (\r\n    <tbody>    </tbody>\r\n  )\r\n  \r\n  let listReceipts = receipts.map((receipt, index) => {\r\n    return (\r\n      <tr key={receipt.id}>\r\n        <th className=\"text-center\"> {receipt.material === 1 ? \"Gạo\" : \"Men\"}</th>\r\n        <td className=\"text-center\"><Moment format=\"DD-MM-YYYY\">{receipt.date_created}</Moment></td>\r\n        <td className=\"text-center d-none d-md-block\">{receipt.quantity} {receipt.material === 1 ? \"bao\" : \"cân\"}</td>\r\n        <td className=\"text-center\"><NumberFormat value={receipt.total_cost} displayType={'text'} thousandSeparator={true} decimalSeparator=\".\" suffix=\" đ\" /></td>\r\n        <td className=\"text-center\">\r\n          <span className=\"cursor-pointer mx-3\" onClick={() => onUpdate(receipt)}>\r\n            <Pen className=\"\"></Pen>\r\n          </span>\r\n          <span className=\"cursor-pointer\" onClick={() => onDelete(receipt.id)}>\r\n            <Trash></Trash>\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <tbody>\r\n      {listReceipts}\r\n    </tbody>\r\n  )\r\n}\r\n\r\n\r\nclass Rice extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      receipts: [],\r\n      form_value: initForm,\r\n      on_updating: false,\r\n      id: \"\"\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n    this.cancelUpdate = this.cancelUpdate.bind(this);\r\n  }\r\n\r\n  getList() {\r\n    const url = `${config.API_URL}/receipt/`;\r\n    axiosInstance.get(url).then(res => {\r\n      \r\n      console.log(res)\r\n      this.setState({ receipts: res.data.results })\r\n    })\r\n  }\r\n\r\n  onDelete(id) {\r\n    if (window.confirm('Are you sure you wish to delete this item?')) {\r\n      console.log(\"delete,\", id)\r\n\r\n      const url = `${config.API_URL}/receipt/${id}`;\r\n      axiosInstance.delete(url).then(data => {\r\n        console.log(this);\r\n        this.getList();\r\n      });\r\n    }\r\n  }\r\n\r\n  onUpdate(receipt) {\r\n    this.setState((prevState) => {\r\n\r\n      let form_value = { ...receipt };\r\n      return {\r\n        on_updating: true,\r\n        form_value\r\n      };\r\n    });\r\n  }\r\n\r\n  cancelUpdate() {\r\n    this.setState({\r\n      on_updating: false,\r\n      form_value: initForm\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target\r\n    // const target = event.target;\r\n    // const value = target.value;\r\n    // const name = target.name;\r\n\r\n    // update form data to state\r\n    this.setState((prevState) => {\r\n      let form_value = { ...prevState.form_value };\r\n      form_value[name] = value;\r\n      console.log(form_value);\r\n      if (form_value[\"material\"] == \"2\" && name !== \"total_cost\") form_value[\"total_cost\"] = form_value[\"quantity\"] * 25000;\r\n      return { form_value };\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Validate data\r\n    if (this.state.form_value.quantity === \"\" || this.state.form_value.total_cost === \"\") {\r\n      return;\r\n    }\r\n\r\n    const url = `${config.API_URL}/receipt/`;\r\n    let value = JSON.stringify(this.state.form_value);\r\n\r\n    if (this.state.on_updating) {\r\n      // Update item\r\n      axiosInstance.put(`${config.API_URL}/receipt/${this.state.form_value.id}/`, value).then(data => {\r\n        console.log(data);\r\n        this.getList();\r\n        this.setState((prevState) => {\r\n          let form_value = initForm;\r\n          return {\r\n            on_updating: false,\r\n            form_value\r\n          };\r\n        });\r\n      });\r\n    } else {\r\n      // Create item\r\n      axiosInstance.post(url, value).then(data => {\r\n        console.log(data);\r\n        this.getList();\r\n        this.setState((prevState) => {\r\n          let form_value = initForm;\r\n          return {\r\n            form_value\r\n          };\r\n        });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-md-4\">\r\n          <legend>Nhập</legend>\r\n          <hr />\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group mb-3\">\r\n              <select className=\"form-select\" name=\"material\" value={this.state.form_value.material} onChange={this.handleChange} >\r\n                <option value=\"1\">Gạo</option>\r\n                <option value=\"2\">Men</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Số bao */}\r\n            <div className=\"mb-3\">\r\n              <input type=\"number\" className=\"form-control\" placeholder={this.state.form_value.material === \"1\" ? \"Số bao\" : \"Số cân\"} name=\"quantity\" value={this.state.form_value.quantity} onChange={this.handleChange} required />\r\n            </div>\r\n            {/* Giá */}\r\n            <div className=\"mb-3\">\r\n              <NumberFormatCustom className=\"form-control\" placeholder=\"Giá\" name=\"total_cost\" value={this.state.form_value.total_cost} onChange={this.handleChange} thousandSeparator={true} suffix={' đ'} required />\r\n            </div>\r\n\r\n            {/* Submit btn */}\r\n            <div className=\"mb-3 d-flex\">\r\n              {this.state.on_updating &&\r\n                <div>\r\n                  {/* For edit item: cancel button and id of item */}\r\n                  <input type=\"number\" name=\"id\" defaultValue={this.state.form_value.id} hidden />\r\n                  <span className=\"btn btn-primary me-3 px-5\" onClick={this.cancelUpdate}>Hủy</span>\r\n                </div>\r\n              }\r\n              <input type=\"submit\" className=\"btn btn-primary w-100\" value={this.state.on_updating ? \"Lưu thay đổi\" : \"Nhập\"} disabled={this.state.form_value.quantity === \"\" || this.state.form_value.total_cost === \"\"} />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* datatable  */}\r\n        <div className=\"col-md-8\">\r\n          <div className=\"table-responsive-md\">\r\n            <table className=\"table align-middle table-striped table-hover table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" className=\"text-center\">Loại</th>\r\n                  <th scope=\"col\" className=\"text-center\">Ngày</th>\r\n                  <th scope=\"col\" className=\"text-center d-none d-md-block\">Số lượng</th>\r\n                  <th scope=\"col\" className=\"text-center\">Tổng tiền</th>\r\n                  <th scope=\"col\" className=\"text-center\">Tùy chọn</th>\r\n                </tr>\r\n              </thead>\r\n              <ListItems receipts={this.state.receipts} onUpdate={this.onUpdate} onDelete={this.onDelete}></ListItems>\r\n\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Rice;\r\n","E:\\react\\tutorial\\src\\components\\NumberFormatCustom.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":30,"column":65,"nodeType":"79","messageId":"80","endLine":30,"endColumn":67},{"ruleId":"81","severity":1,"message":"82","line":93,"column":9,"nodeType":"83","messageId":"80","endLine":93,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":154,"column":33,"nodeType":"79","messageId":"80","endLine":154,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":155,"column":33,"nodeType":"79","messageId":"80","endLine":155,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":142,"column":34,"nodeType":"79","messageId":"80","endLine":142,"endColumn":36},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'orders'.","ObjectExpression","no-global-assign","no-unsafe-negation"]